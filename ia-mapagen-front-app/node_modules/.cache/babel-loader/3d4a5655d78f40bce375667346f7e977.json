{"ast":null,"code":"var _jsxFileName = \"C:\\\\IA_MapaGen\\\\Web\\\\frontend\\\\ia-mapagen-front\\\\ia-mapagen-front-app\\\\src\\\\components\\\\SliderSelector.js\";\nimport React, { useState } from \"react\";\nimport { Typography, Slider, Button, Grid, Modal } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst SliderSelector = ({\n  values,\n  label,\n  explanation,\n  isPercentage = false\n}) => {\n  const handleChange = (event, newValue) => values.setter(newValue);\n\n  const [tipOpen, setTipOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTipOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HelpOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })), tipOpen && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, explanation))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, `${values.min}${isPercentage ? \"%\" : \"\"}`), /*#__PURE__*/React.createElement(Slider, {\n    value: values.default,\n    min: values.min,\n    max: values.max,\n    onChange: handleChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"continuous-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, `${values.max}${isPercentage ? \"%\" : \"\"}`)));\n};\n\nexport default SliderSelector;","map":{"version":3,"sources":["C:/IA_MapaGen/Web/frontend/ia-mapagen-front/ia-mapagen-front-app/src/components/SliderSelector.js"],"names":["React","useState","Typography","Slider","Button","Grid","Modal","HelpOutlineIcon","SliderSelector","values","label","explanation","isPercentage","handleChange","event","newValue","setter","tipOpen","setTipOpen","min","default","max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,mBAAxD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,MADsB;AAEtBC,EAAAA,KAFsB;AAGtBC,EAAAA,WAHsB;AAItBC,EAAAA,YAAY,GAAG;AAJO,CAAD,KAKjB;AACJ,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBN,MAAM,CAACO,MAAP,CAAcD,QAAd,CAA1C;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE,uDACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAC,eAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCS,KAAjC,CANF,eAOE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMQ,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUGD,OAAO,iBACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,WAAJ,CADF,CAXJ,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,GAAEF,MAAM,CAACU,GAAI,GAAEP,YAAY,GAAG,GAAH,GAAS,EAAG,EAA5C,CADF,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACW,OADhB;AAEE,IAAA,GAAG,EAAEX,MAAM,CAACU,GAFd;AAGE,IAAA,GAAG,EAAEV,MAAM,CAACY,GAHd;AAIE,IAAA,QAAQ,EAAER,YAJZ;AAKE,IAAA,iBAAiB,EAAC,MALpB;AAME,uBAAgB,mBANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,GAAEJ,MAAM,CAACY,GAAI,GAAET,YAAY,GAAG,GAAH,GAAS,EAAG,EAA5C,CAVF,CAjBF,CADF;AAgCD,CAzCD;;AA2CA,eAAeJ,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Typography, Slider, Button, Grid, Modal } from \"@material-ui/core\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst SliderSelector = ({\r\n  values,\r\n  label,\r\n  explanation,\r\n  isPercentage = false,\r\n}) => {\r\n  const handleChange = (event, newValue) => values.setter(newValue);\r\n  const [tipOpen, setTipOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"subtitle1\">{label}</Typography>\r\n        <Button onClick={() => setTipOpen(true)}>\r\n          <HelpOutlineIcon />\r\n        </Button>\r\n        {tipOpen && (\r\n          <Typography>\r\n            <i>{explanation}</i>\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n      <div className=\"slider-container\">\r\n        <p>{`${values.min}${isPercentage ? \"%\" : \"\"}`}</p>\r\n        <Slider\r\n          value={values.default}\r\n          min={values.min}\r\n          max={values.max}\r\n          onChange={handleChange}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"continuous-slider\"\r\n        />\r\n        <p>{`${values.max}${isPercentage ? \"%\" : \"\"}`}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SliderSelector;\r\n"]},"metadata":{},"sourceType":"module"}