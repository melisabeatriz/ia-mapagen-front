{"ast":null,"code":"var _jsxFileName = \"C:\\\\IA_MapaGen\\\\Web\\\\frontend\\\\ia-mapagen-front\\\\ia-mapagen-front-app\\\\src\\\\components\\\\FileUploader.js\";\nimport React from \"react\";\nimport { Button, Typography, Grid } from \"@material-ui/core\";\nimport { useFilePicker } from \"use-file-picker\";\nimport { isEmpty } from \"lodash\";\n\nconst FileUploader = ({\n  legend,\n  uploadFile\n}) => {\n  const [openFileSelector, {\n    filesContent,\n    loading,\n    acceptedFileType\n  }] = useFilePicker({\n    // accept: acceptedFileType,\n    multiple: false\n  });\n\n  if (!isEmpty(filesContent)) {\n    uploadFile(filesContent[0].name);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, legend), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Cargando...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, isEmpty(filesContent) ? \"No se eligió ningún archivo.\" : filesContent[0].name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => openFileSelector(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, isEmpty(filesContent) ? \"Elegir archivo\" : \"Modificar archivo\")))));\n};\n\nexport default FileUploader;","map":{"version":3,"sources":["C:/IA_MapaGen/Web/frontend/ia-mapagen-front/ia-mapagen-front-app/src/components/FileUploader.js"],"names":["React","Button","Typography","Grid","useFilePicker","isEmpty","FileUploader","legend","uploadFile","openFileSelector","filesContent","loading","acceptedFileType","multiple","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA4B;AAC/C,QAAM,CAACC,gBAAD,EAAmB;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAnB,IACJR,aAAa,CAAC;AACZ;AACAS,IAAAA,QAAQ,EAAE;AAFE,GAAD,CADf;;AAMA,MAAI,CAACR,OAAO,CAACK,YAAD,CAAZ,EAA4B;AAC1BF,IAAAA,UAAU,CAACE,YAAY,CAAC,CAAD,CAAZ,CAAgBI,IAAjB,CAAV;AACD;;AACD,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,MAAT,CADF,eAEE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAC,eAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGI,OAAO,gBACN,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,gBAGN,uDACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACK,YAAD,CAAP,GACG,8BADH,GAEGA,YAAY,CAAC,CAAD,CAAZ,CAAgBI,IAHtB,CADF,eAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAML,gBAAgB,EAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,OAAO,CAACK,YAAD,CAAP,GAAwB,gBAAxB,GAA2C,mBAL9C,CANF,CATJ,CAFF,CADF,CADF;AAiCD,CA3CD;;AA6CA,eAAeJ,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Typography, Grid } from \"@material-ui/core\";\r\nimport { useFilePicker } from \"use-file-picker\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst FileUploader = ({ legend, uploadFile }) => {\r\n  const [openFileSelector, { filesContent, loading, acceptedFileType }] =\r\n    useFilePicker({\r\n      // accept: acceptedFileType,\r\n      multiple: false,\r\n    });\r\n\r\n  if (!isEmpty(filesContent)) {\r\n    uploadFile(filesContent[0].name);\r\n  }\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>{legend}</legend>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          {loading ? (\r\n            <Typography variant=\"subtitle1\">Cargando...</Typography>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"subtitle1\">\r\n                {isEmpty(filesContent)\r\n                  ? \"No se eligió ningún archivo.\"\r\n                  : filesContent[0].name}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => openFileSelector()}\r\n              >\r\n                {isEmpty(filesContent) ? \"Elegir archivo\" : \"Modificar archivo\"}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </fieldset>     \r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"]},"metadata":{},"sourceType":"module"}